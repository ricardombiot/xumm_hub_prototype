# AUTOGENERATED FROM 'queries/quotation_select_for_escrow.edgeql' WITH:
#     $ edgedb-py --dsn edgedb://edgedb:1234@localhost:10703 --tls-security insecure


from __future__ import annotations
import dataclasses
import edgedb
import enum
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_validators__(cls):
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class QuotationSelectForEscrowResult(NoPydanticValidation):
    id: uuid.UUID
    total_amount: float
    delta_days: int | None
    destine: QuotationSelectForEscrowResultDestine
    job: QuotationSelectForEscrowResultJob
    escrow_payload: str | None
    escrow_xumm_payload_uuid: str | None
    escrow_state: StateQuotationEscrow | None


@dataclasses.dataclass
class QuotationSelectForEscrowResultDestine(NoPydanticValidation):
    id: uuid.UUID
    public_address: str


@dataclasses.dataclass
class QuotationSelectForEscrowResultJob(NoPydanticValidation):
    id: uuid.UUID
    payer: QuotationSelectForEscrowResultJobPayer


@dataclasses.dataclass
class QuotationSelectForEscrowResultJobPayer(NoPydanticValidation):
    id: uuid.UUID
    public_address: str


class StateQuotationEscrow(enum.Enum):
    NONE = "NONE"
    BUILED = "BUILED"
    WAITING_XUMM_SIGN = "WAITING_XUMM_SIGN"
    CHECKED = "CHECKED"
    WAITING_XUMM_SIGN_FINISH = "WAITING_XUMM_SIGN_FINISH"
    FINISHED = "FINISHED"


async def quotation_select_for_escrow(
    executor: edgedb.AsyncIOExecutor,
    *,
    payer_id: uuid.UUID,
    quotation_id: uuid.UUID,
) -> QuotationSelectForEscrowResult | None:
    return await executor.query_single(
        """\
        select default::Quotation {
          total_amount,
          delta_days,
          destine : {
            public_address
          },
          job : {
            payer : {
              id,
              public_address
            }
          },
          escrow_payload,
          escrow_xumm_payload_uuid,
          escrow_state
        } filter .job.payer.id = <std::uuid> $payer_id and
          .id = <std::uuid> $quotation_id\
        """,
        payer_id=payer_id,
        quotation_id=quotation_id,
    )
